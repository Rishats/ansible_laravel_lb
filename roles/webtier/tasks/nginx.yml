# file: roles/webtier/tasks/nginx.yml
- name: Make sure apache related packages are removed
  tags: nginx
  apt: name="{{ packages }}" state=absent purge=yes
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'
  vars:
      packages:
      - apache2
      - apache2-utils
  
- name: Install nginx
  tags: nginx
  apt: name=nginx state=present
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

- name: Make sure nginx user exists
  tags: nginx
  user:
    name: nginx
    comment: nginx user
    createhome: false
    generate_ssh_key: false
    shell: /bin/false
    system: yes
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'
  
- name: Kill PID which use 80 port.
  ignore_errors: yes
  tags: letsencrypt
  raw: sudo fuser -k 80/tcp

- name: Make sure nginx is running and is started on boot
  tags: nginx
  service: name=nginx state=started enabled=yes

- name: Make sure nginx is configured
  tags: nginx
  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf
  notify:
    - Restart nginx

- name: Make sure nginx virtual hosts are configured for production
  tags: nginx
  template: src=nginx-virtualhost-production.conf.j2 dest=/etc/nginx/conf.d/{{ item.value.servernames[0] }}.conf
  with_dict: "{{ virtualhosts }}"
  when: enable_ssl|default(false)|bool == false
  notify:
    - Restart nginx

- name: Create project directory for production
  tags: nginx
  file: path=/var/www/{{ item.value.servernames[0] }} state=directory owner=deployer group=www-data mode=0775
  with_dict: "{{ virtualhosts }}"
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

- name: ACL access for {{ system_user.user_login }} (/var/www).
  tags: nginx
  acl:
   path: /var/www
   entry: "u:{{ system_user.user_login }}:rwx"
   state: present
  with_dict: "{{ system_user }}"

- name: ACL access for www-data (/var/www).
  tags: nginx
  acl:
   path: /var/www
   entry: "u:www-data:rwx"
   state: present
  with_dict: "{{ system_user }}"

- name: ACL access for nginx (/var/www).
  tags: nginx
  acl:
   path: /var/www
   entry: "u:nginx:rwx"
   state: present
  with_dict: "{{ system_user }}"
